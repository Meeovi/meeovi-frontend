query cities_states($filter: directus_folders_filter, $sort: [String], $limit: Int, $offset: Int, $page: Int, $search: String, $filter1: directus_folders_filter, $sort1: [String], $limit1: Int, $offset1: Int, $page1: Int, $search1: String, $filter2: directus_files_filter, $sort2: [String], $limit2: Int, $offset2: Int, $page2: Int, $search2: String, $filter3: cities_customers_filter, $sort3: [String], $limit3: Int, $offset3: Int, $page3: Int, $search3: String, $filter4: states_cities_filter, $sort4: [String], $limit4: Int, $offset4: Int, $page4: Int, $search4: String, $filter5: cities_filter, $sort5: [String], $limit5: Int, $offset5: Int, $page5: Int, $search5: String, $filter6: states_countries_filter, $sort6: [String], $limit6: Int, $offset6: Int, $page6: Int, $search6: String, $filter7: products_countries_filter, $sort7: [String], $limit7: Int, $offset7: Int, $page7: Int, $search7: String, $filter8: cities_countries_filter, $sort8: [String], $limit8: Int, $offset8: Int, $page8: Int, $search8: String, $filter9: currencies_countries_filter, $sort9: [String], $limit9: Int, $offset9: Int, $page9: Int, $search9: String, $filter10: directus_files_filter, $sort10: [String], $limit10: Int, $offset10: Int, $page10: Int, $search10: String, $filter11: countries_filter, $sort11: [String], $limit11: Int, $offset11: Int, $page11: Int, $search11: String, $filter12: cities_countries_filter, $sort12: [String], $limit12: Int, $offset12: Int, $page12: Int, $search12: String, $filter13: cities_filter, $sort13: [String], $limit13: Int, $offset13: Int, $page13: Int, $search13: String, $filter14: cities_states_filter, $sort14: [String], $limit14: Int, $offset14: Int, $page14: Int, $search14: String){
    cities_states(filter: $filter14, sort: $sort14, limit: $limit14, offset: $offset14, page: $page14, search: $search14){
        id
        cities_id(filter: $filter13, sort: $sort13, limit: $limit13, offset: $offset13, page: $page13, search: $search13){
            id
            name
            description
            postalCode
            image(filter: $filter2, sort: $sort2, limit: $limit2, offset: $offset2, page: $page2, search: $search2){
                id
                storage
                filename_disk
                filename_download
                title
                type
                folder(filter: $filter1, sort: $sort1, limit: $limit1, offset: $offset1, page: $page1, search: $search1){
                    id
                    name
                    parent(filter: $filter, sort: $sort, limit: $limit, offset: $offset, page: $page, search: $search){
                        id
                        name
                    }
                }
                uploaded_by
                uploaded_on
                uploaded_on_func{
                    year
                    month
                    week
                    day
                    weekday
                    hour
                    minute
                    second
                }
                modified_by
                modified_on
                modified_on_func{
                    year
                    month
                    week
                    day
                    weekday
                    hour
                    minute
                    second
                }
                charset
                filesize
                width
                height
                duration
                embed
                description
                location
                tags
                tags_func{
                    count
                }
                metadata
                metadata_func{
                    count
                }
            }
            longitude
            latitude
            languagenames
            country(filter: $filter12, sort: $sort12, limit: $limit12, offset: $offset12, page: $page12, search: $search12){
                id
                cities_id(filter: $filter5, sort: $sort5, limit: $limit5, offset: $offset5, page: $page5, search: $search5){
                    id
                    name
                    description
                    postalCode
                    longitude
                    latitude
                    languagenames
                    country_func{
                        count
                    }
                    customers(filter: $filter3, sort: $sort3, limit: $limit3, offset: $offset3, page: $page3, search: $search3){
                        id
                    }
                    customers_func{
                        count
                    }
                    states(filter: $filter4, sort: $sort4, limit: $limit4, offset: $offset4, page: $page4, search: $search4){
                        id
                    }
                    states_func{
                        count
                    }
                }
                countries_id(filter: $filter11, sort: $sort11, limit: $limit11, offset: $offset11, page: $page11, search: $search11){
                    id
                    name
                    iso3
                    iso2
                    phonecode
                    capital
                    currency
                    currency_symbol
                    tld
                    native
                    region
                    region_func{
                        count
                    }
                    subregion
                    timezones
                    translations
                    latitude
                    longitude
                    emoji
                    emojiU
                    created_at
                    created_at_func{
                        year
                        month
                        week
                        day
                        weekday
                        hour
                        minute
                        second
                    }
                    updated_at
                    updated_at_func{
                        year
                        month
                        week
                        day
                        weekday
                        hour
                        minute
                        second
                    }
                    flag
                    wikiDataId
                    states(filter: $filter6, sort: $sort6, limit: $limit6, offset: $offset6, page: $page6, search: $search6){
                        id
                    }
                    states_func{
                        count
                    }
                    products(filter: $filter7, sort: $sort7, limit: $limit7, offset: $offset7, page: $page7, search: $search7){
                        id
                    }
                    products_func{
                        count
                    }
                    cities(filter: $filter8, sort: $sort8, limit: $limit8, offset: $offset8, page: $page8, search: $search8){
                        id
                    }
                    cities_func{
                        count
                    }
                    currencies(filter: $filter9, sort: $sort9, limit: $limit9, offset: $offset9, page: $page9, search: $search9){
                        id
                    }
                    currencies_func{
                        count
                    }
                    image(filter: $filter10, sort: $sort10, limit: $limit10, offset: $offset10, page: $page10, search: $search10){
                        id
                        storage
                        filename_disk
                        filename_download
                        title
                        type
                        uploaded_by
                        uploaded_on
                        modified_by
                        modified_on
                        charset
                        filesize
                        width
                        height
                        duration
                        embed
                        description
                        location
                        tags
                        metadata
                    }
                }
            }
        }
    }
}