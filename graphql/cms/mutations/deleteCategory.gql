mutation deleteCategory($first: Int, $last: Int, $after: String, $before: String, $first1: Int, $last1: Int, $after1: String, $before1: String, $where: CategoryToCategoryConnectionWhereArgs, $first2: Int, $last2: Int, $after2: String, $before2: String, $where1: CategoryToContentNodeConnectionWhereArgs, $first3: Int, $last3: Int, $after3: String, $before3: String, $first4: Int, $last4: Int, $after4: String, $before4: String, $format: PostObjectFieldFormatEnum, $format1: PostObjectFieldFormatEnum, $format2: PostObjectFieldFormatEnum, $first5: Int, $last5: Int, $after5: String, $before5: String, $where2: CategoryToPostConnectionWhereArgs, $input: DeleteCategoryInput!){
    deleteCategory(input: $input){
        category{
            ancestors(first: $first, last: $last, after: $after, before: $before){
                edges{
                    cursor
                    node{
                        count
                        databaseId
                        description
                        id
                        isComment
                        isContentNode
                        isFrontPage
                        isPostsPage
                        isRestricted
                        isTermNode
                        link
                        name
                        parentDatabaseId
                        parentId
                        slug
                        taxonomyName
                        termGroupId
                        termTaxonomyId
                        uri
                    }
                }
                nodes{
                    count
                    databaseId
                    description
                    id
                    isComment
                    isContentNode
                    isFrontPage
                    isPostsPage
                    isRestricted
                    isTermNode
                    link
                    name
                    parent{
                        cursor
                    }
                    parentDatabaseId
                    parentId
                    slug
                    taxonomy{
                        cursor
                    }
                    taxonomyName
                    termGroupId
                    termTaxonomyId
                    uri
                }
                pageInfo{
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
            }
            children(first: $first1, last: $last1, after: $after1, before: $before1, where: $where){
                edges{
                    cursor
                }
                nodes{
                    count
                    databaseId
                    description
                    id
                    isComment
                    isContentNode
                    isFrontPage
                    isPostsPage
                    isRestricted
                    isTermNode
                    link
                    name
                    parentDatabaseId
                    parentId
                    slug
                    taxonomyName
                    termGroupId
                    termTaxonomyId
                    uri
                }
                pageInfo{
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
            }
            contentNodes(first: $first2, last: $last2, after: $after2, before: $before2, where: $where1){
                edges{
                    cursor
                }
                nodes{
                    contentType{
                        cursor
                    }
                    contentTypeName
                    databaseId
                    date
                    dateGmt
                    desiredSlug
                    editingLockedBy{
                        cursor
                        lockTimestamp
                    }
                    enclosure
                    guid
                    id
                    isComment
                    isContentNode
                    isFrontPage
                    isPostsPage
                    isPreview
                    isRestricted
                    isTermNode
                    lastEditedBy{
                        cursor
                    }
                    link
                    modified
                    modifiedGmt
                    previewRevisionDatabaseId
                    previewRevisionId
                    slug
                    status
                    template{
                        templateName
                    }
                    uri
                }
                pageInfo{
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
            }
            count
            databaseId
            description
            enqueuedScripts(first: $first3, last: $last3, after: $after3, before: $before3){
                edges{
                    cursor
                }
                nodes{
                    after
                    before
                    conditional
                    dependencies{
                        after
                        before
                        conditional
                        extraData
                        group
                        groupLocation
                        handle
                        id
                        src
                        strategy
                        version
                    }
                    extraData
                    group
                    groupLocation
                    handle
                    id
                    src
                    strategy
                    version
                }
                pageInfo{
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
            }
            enqueuedStylesheets(first: $first4, last: $last4, after: $after4, before: $before4){
                edges{
                    cursor
                }
                nodes{
                    after
                    before
                    conditional
                    group
                    handle
                    id
                    isRtl
                    media
                    path
                    rel
                    src
                    suffix
                    title
                    version
                }
                pageInfo{
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
            }
            id
            isComment
            isContentNode
            isFrontPage
            isPostsPage
            isRestricted
            isTermNode
            link
            name
            parent{
                cursor
                node{
                    count
                    databaseId
                    description
                    id
                    isComment
                    isContentNode
                    isFrontPage
                    isPostsPage
                    isRestricted
                    isTermNode
                    link
                    name
                    parent{
                        cursor
                    }
                    parentDatabaseId
                    parentId
                    slug
                    taxonomy{
                        cursor
                    }
                    taxonomyName
                    termGroupId
                    termTaxonomyId
                    uri
                }
            }
            parentDatabaseId
            parentId
            posts(first: $first5, last: $last5, after: $after5, before: $before5, where: $where2){
                edges{
                    cursor
                }
                nodes{
                    author{
                        cursor
                    }
                    authorDatabaseId
                    authorId
                    commentCount
                    commentStatus
                    content(format: $format)
                    contentTypeName
                    databaseId
                    date
                    dateGmt
                    desiredSlug
                    enclosure
                    excerpt(format: $format1)
                    featuredImage{
                        cursor
                    }
                    featuredImageDatabaseId
                    featuredImageId
                    guid
                    hasPassword
                    id
                    isComment
                    isContentNode
                    isFrontPage
                    isPostsPage
                    isPreview
                    isRestricted
                    isRevision
                    isSticky
                    isTermNode
                    link
                    modified
                    modifiedGmt
                    password
                    pingStatus
                    pinged
                    preview{
                        cursor
                    }
                    previewRevisionDatabaseId
                    previewRevisionId
                    revisionOf{
                        cursor
                    }
                    slug
                    status
                    title(format: $format2)
                    toPing
                    uri
                }
                pageInfo{
                    endCursor
                    hasNextPage
                    hasPreviousPage
                    startCursor
                }
            }
            slug
            taxonomy{
                cursor
                node{
                    description
                    graphqlPluralName
                    graphqlSingleName
                    hierarchical
                    id
                    isRestricted
                    label
                    name
                    public
                    restBase
                    restControllerClass
                    showCloud
                    showInAdminColumn
                    showInGraphql
                    showInMenu
                    showInNavMenus
                    showInQuickEdit
                    showInRest
                    showUi
                }
            }
            taxonomyName
            termGroupId
            termTaxonomyId
            uri
        }
        clientMutationId
        deletedId
    }
}