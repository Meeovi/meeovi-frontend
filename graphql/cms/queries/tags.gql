query tags($first: Int, $last: Int, $after: String, $before: String, $where: TagToContentNodeConnectionWhereArgs, $first1: Int, $last1: Int, $after1: String, $before1: String, $first2: Int, $last2: Int, $after2: String, $before2: String, $format: PostObjectFieldFormatEnum, $format1: PostObjectFieldFormatEnum, $format2: PostObjectFieldFormatEnum, $first3: Int, $last3: Int, $after3: String, $before3: String, $where1: TagToPostConnectionWhereArgs, $first4: Int, $last4: Int, $after4: String, $before4: String, $where2: RootQueryToTagConnectionWhereArgs){
    tags(first: $first4, last: $last4, after: $after4, before: $before4, where: $where2){
        edges{
            cursor
            node{
                contentNodes(first: $first, last: $last, after: $after, before: $before, where: $where){
                    edges{
                        cursor
                    }
                    nodes{
                        contentTypeName
                        databaseId
                        date
                        dateGmt
                        desiredSlug
                        enclosure
                        guid
                        id
                        isComment
                        isContentNode
                        isFrontPage
                        isPostsPage
                        isPreview
                        isRestricted
                        isTermNode
                        link
                        modified
                        modifiedGmt
                        previewRevisionDatabaseId
                        previewRevisionId
                        slug
                        status
                        uri
                    }
                    pageInfo{
                        endCursor
                        hasNextPage
                        hasPreviousPage
                        startCursor
                    }
                }
                count
                databaseId
                description
                enqueuedScripts(first: $first1, last: $last1, after: $after1, before: $before1){
                    edges{
                        cursor
                    }
                    nodes{
                        after
                        before
                        conditional
                        extraData
                        group
                        groupLocation
                        handle
                        id
                        src
                        strategy
                        version
                    }
                    pageInfo{
                        endCursor
                        hasNextPage
                        hasPreviousPage
                        startCursor
                    }
                }
                enqueuedStylesheets(first: $first2, last: $last2, after: $after2, before: $before2){
                    edges{
                        cursor
                    }
                    nodes{
                        after
                        before
                        conditional
                        group
                        handle
                        id
                        isRtl
                        media
                        path
                        rel
                        src
                        suffix
                        title
                        version
                    }
                    pageInfo{
                        endCursor
                        hasNextPage
                        hasPreviousPage
                        startCursor
                    }
                }
                id
                isComment
                isContentNode
                isFrontPage
                isPostsPage
                isRestricted
                isTermNode
                link
                name
                posts(first: $first3, last: $last3, after: $after3, before: $before3, where: $where1){
                    edges{
                        cursor
                    }
                    nodes{
                        authorDatabaseId
                        authorId
                        commentCount
                        commentStatus
                        content(format: $format)
                        contentTypeName
                        databaseId
                        date
                        dateGmt
                        desiredSlug
                        enclosure
                        excerpt(format: $format1)
                        featuredImageDatabaseId
                        featuredImageId
                        guid
                        hasPassword
                        id
                        isComment
                        isContentNode
                        isFrontPage
                        isPostsPage
                        isPreview
                        isRestricted
                        isRevision
                        isSticky
                        isTermNode
                        link
                        modified
                        modifiedGmt
                        password
                        pingStatus
                        pinged
                        previewRevisionDatabaseId
                        previewRevisionId
                        slug
                        status
                        title(format: $format2)
                        toPing
                        uri
                    }
                    pageInfo{
                        endCursor
                        hasNextPage
                        hasPreviousPage
                        startCursor
                    }
                }
                slug
                taxonomy{
                    cursor
                    node{
                        description
                        graphqlPluralName
                        graphqlSingleName
                        hierarchical
                        id
                        isRestricted
                        label
                        name
                        public
                        restBase
                        restControllerClass
                        showCloud
                        showInAdminColumn
                        showInGraphql
                        showInMenu
                        showInNavMenus
                        showInQuickEdit
                        showInRest
                        showUi
                    }
                }
                taxonomyName
                termGroupId
                termTaxonomyId
                uri
            }
        }
        nodes{
            count
            databaseId
            description
            id
            isComment
            isContentNode
            isFrontPage
            isPostsPage
            isRestricted
            isTermNode
            link
            name
            slug
            taxonomy{
                cursor
            }
            taxonomyName
            termGroupId
            termTaxonomyId
            uri
        }
        pageInfo{
            endCursor
            hasNextPage
            hasPreviousPage
            startCursor
        }
    }
}