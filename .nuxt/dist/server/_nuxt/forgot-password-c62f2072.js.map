{"version":3,"file":"forgot-password-c62f2072.js","sources":["../../../../pages/Admin/Auth/forgot-password.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form method=\"post\" @v-on:submit.prevent=\"addAccessToken()\">\r\n            <v-table class=\"table\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td style=\"text-align: right;\">Enter Email</td>\r\n                        <td>\r\n                            <v-text-field v-model=\"email\" type=\"email\" name=\"email\" hint=\"Enter your email so we can send you your password reset link\" required></v-text-field>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </v-table>\r\n            <v-card-actions>\r\n                <v-spacer></v-spacer>\r\n                <v-btn color=\"blue-darken-1\" variant=\"text\" @click=\"dialog = false\">\r\n                    Save\r\n                </v-btn>\r\n            </v-card-actions>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    /* \r\n    import gql from \"graphql-tag\";\r\n    import findManyUsers from \"~/graphql/query/findManyUsers\";\r\n    // import  tax from '~/graphql/query/findManyTax'\r\n\r\n    const ADD_USER = gql `\r\n    mutation ($email: String!){\r\n    createOneUsers(data: {email: $email}) {\r\n        email\r\n  }\r\n}`;*/\r\n\r\n    export default {\r\n  /*      data() {\r\n            return {\r\n                email: \" \",\r\n            }\r\n        },\r\n        methods: {\r\n            async addUser() {\r\n                const email = this.email;\r\n                await this.$apollo.mutate({\r\n                    mutation: ADD_USER,\r\n                    variables: {\r\n                        email\r\n                    },\r\n                    update: (cache, {\r\n                        data: {\r\n                            insertStaffMember\r\n                        }\r\n                    }) => {\r\n                        // Read data from cache for this query\r\n                        try {\r\n                            const insertedStaffMember = insertStaffMember.returning;\r\n                            console.log(insertedStaffMember)\r\n                            cache.writeQuery({\r\n                                query: findManyUsers\r\n                            })\r\n                        } catch (err) {\r\n                            console.error(err)\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    this.$router.push({\r\n                        path: '../../system/staff-members'\r\n                    })\r\n                }).catch(err => console.log(err));\r\n                this.email = ' ';\r\n            },\r\n        },\r\n        /* apollo: {\r\n            tax: {\r\n            prefetch: true,\r\n            query: tax\r\n            } \r\n        }, */\r\n    }\r\n</script>\r\n\r\n<script setup>\r\n    useHead({\r\n        title: 'Forgot Password',\r\n    });\r\n</script>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,MAAA,cAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;;;;;AAIA,YAAA;AAAA,MACA,OAAA;AAAA,IACA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}